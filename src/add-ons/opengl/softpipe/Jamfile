SubDir HAIKU_TOP src add-ons opengl softpipe ;

SetSubDirSupportedPlatformsBeOSCompatible ;

if $(TARGET_PLATFORM) != haiku {
	UseHeaders [ FDirName $(HAIKU_TOP) headers os opengl ] : true ;
		# We need our public GL headers also when not compiling for Haiku.
}


{
	local defines ;
	defines = BEOS_THREADS GNU_ASSEMBLER ;

	if $(TARGET_ARCH) = x86 {
		defines += USE_X86_ASM USE_MMX_ASM USE_3DNOW_ASM USE_SSE_ASM ; 
	} else {
		# Not yet supported, as current Mesa3D PPC assembly is Linux-dependent!
		# defines += USE_PPC_ASM ;
	}

	SubDirC++Flags [ FDefines $(defines) ] ;
}

UsePrivateHeaders interface opengl ;

UseHeaders [ FDirName $(HAIKU_TOP) src add-ons opengl trace ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl hgl ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa main ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa gallium include ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa gallium auxiliary ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa glapi ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa tnl ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa x86 ] ;
UseHeaders [ FDirName $(HAIKU_TOP) src kits opengl mesa ppc ] ;

Addon SoftPipe :
	SoftPipeRenderer.cpp
	hsp_bitmap_wrapper.cpp
	haiku_softpipe_winsys.c
	hsp_context.c
	hsp_device.c
	hsp_framebuffer.c
	hsp_getprocaddress.c
#	hsp_pixelformat.c
	sp_clear.c
	sp_context.c
	sp_draw_arrays.c
	sp_flush.c
	sp_fs_exec.c
	sp_fs_llvm.c
	sp_fs_sse.c
	sp_prim_setup.c
	sp_prim_vbuf.c
	sp_quad_alpha_test.c
	sp_quad_blend.c
#	sp_quad_bufloop.c
	sp_quad_colormask.c
	sp_quad_coverage.c
	sp_quad_depth_test.c
	sp_quad_earlyz.c
	sp_quad_fs.c
	sp_quad_occlusion.c
	sp_quad_output.c
	sp_quad_pipe.c
	sp_quad_stencil.c
	sp_quad_stipple.c
	sp_query.c
	sp_screen.c
	sp_setup.c
	sp_state_blend.c
	sp_state_clip.c
	sp_state_derived.c
	sp_state_fs.c
	sp_state_rasterizer.c
	sp_state_sampler.c
	sp_state_surface.c
	sp_state_vertex.c
	sp_surface.c
	sp_tex_sample.c
	sp_texture.c
	sp_tile_cache.c
	: libGL.so libmesa.a be 
;
